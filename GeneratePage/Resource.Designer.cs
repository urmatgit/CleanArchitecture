//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratePage {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GeneratePage.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.ComponentModel.DataAnnotations;
        ///using AutoMapper;
        ///using BlazorHero.CleanArchitecture.Application.Interfaces.Repositories;
        ///using BlazorHero.CleanArchitecture.Domain.Entities.Catalog;
        ///using BlazorHero.CleanArchitecture.Shared.Wrapper;
        ///using MediatR;
        ///using System.Threading;
        ///using System.Threading.Tasks;
        ///using Microsoft.Extensions.Localization;
        ///using BlazorHero.CleanArchitecture.Shared.Constants.Application;
        ///
        ///namespace BlazorHero.CleanArchitecture.Application.Features.&lt;FieldName&gt;s.Comman [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AddEdit {
            get {
                return ResourceManager.GetString("AddEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using BlazorHero.CleanArchitecture.Client.Extensions;
        ///using BlazorHero.CleanArchitecture.Shared.Constants.Application;
        ///using Microsoft.AspNetCore.Components;
        ///using Microsoft.AspNetCore.SignalR.Client;
        ///using MudBlazor;
        ///using System.Threading.Tasks;
        ///using Blazored.FluentValidation;
        ///using BlazorHero.CleanArchitecture.Application.Features.&lt;FieldName&gt;s.Commands.AddEdit;
        ///using BlazorHero.CleanArchitecture.Client.Infrastructure.Managers.Catalog.&lt;FieldName&gt;;
        ///
        ///namespace BlazorHero.CleanArchitecture.Client. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AddEdit_cs {
            get {
                return ResourceManager.GetString("AddEdit_cs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @inject Microsoft.Extensions.Localization.IStringLocalizer&lt;AddEdit&lt;FieldName&gt;Modal&gt; _localizer
        ///
        ///&lt;EditForm Model=&quot;@AddEdit&lt;FieldName&gt;Model&quot; OnValidSubmit=&quot;SaveAsync&quot;&gt;
        ///    &lt;FluentValidationValidator @ref=&quot;_fluentValidationValidator&quot; /&gt;
        ///    &lt;MudDialog&gt;
        ///        &lt;TitleContent&gt;
        ///            @{
        ///                if (AddEdit&lt;FieldName&gt;Model.Id == 0)
        ///                {
        ///                    &lt;MudText Typo=&quot;Typo.h6&quot;&gt;
        ///                        &lt;MudIcon Icon=&quot;@Icons.Material.Filled.Add&quot; Class=&quot;mr-3 mb-n1&quot; /&gt;
        ///         [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AddEdit_razor {
            get {
                return ResourceManager.GetString("AddEdit_razor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using BlazorHero.CleanArchitecture.Application.Features.&lt;FieldName&gt;s.Queries.GetAll;
        ///using BlazorHero.CleanArchitecture.Application.Features.&lt;FieldName&gt;s.Queries.GetById;
        ///using BlazorHero.CleanArchitecture.Shared.Constants.Permission;
        ///using Microsoft.AspNetCore.Authorization;
        ///using Microsoft.AspNetCore.Mvc;
        ///using System.Threading.Tasks;
        ///using BlazorHero.CleanArchitecture.Application.Features.&lt;FieldName&gt;s.Commands.AddEdit;
        ///using BlazorHero.CleanArchitecture.Application.Features.&lt;FieldName&gt;s.Commands.D [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Controller {
            get {
                return ResourceManager.GetString("Controller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using BlazorHero.CleanArchitecture.Application.Interfaces.Repositories;
        ///using BlazorHero.CleanArchitecture.Domain.Entities.Catalog;
        ///using BlazorHero.CleanArchitecture.Shared.Wrapper;
        ///using MediatR;
        ///using System.Threading;
        ///using System.Threading.Tasks;
        ///using Microsoft.Extensions.Localization;
        ///using BlazorHero.CleanArchitecture.Shared.Constants.Application;
        ///
        ///namespace BlazorHero.CleanArchitecture.Application.Features.&lt;FieldName&gt;s.Commands.Delete
        ///{
        ///    public class Delete&lt;FieldName&gt;Command : IReques [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Delete {
            get {
                return ResourceManager.GetString("Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using BlazorHero.CleanArchitecture.Domain.Contracts;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///using System.Threading.Tasks;
        ///
        ///namespace BlazorHero.CleanArchitecture.Domain.Entities.Catalog
        ///{
        ///    /// &lt;summary&gt;
        ///    /// &lt;FieldName&gt;, Workout,GameTraining,
        ///    /// &lt;/summary&gt;
        ///    public class &lt;FieldName&gt; : BaseEntity
        ///    {
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string DomainEntity {
            get {
                return ResourceManager.GetString("DomainEntity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace BlazorHero.CleanArchitecture.Client.Infrastructure.Routes
        ///{
        ///    public static class &lt;FieldName&gt;sEndpoints
        ///    {
        ///        public static string ExportFiltered(string searchString)
        ///        {
        ///            return $&quot;{Export}?searchString={searchString}&quot;;
        ///        }
        ///
        ///        public static string Export = &quot;api/v1/&lt;!FieldName&gt;s/export&quot;;
        ///
        ///        public static string GetAll = &quot;api/v1/&lt;!FieldName&gt;s&quot;;
        ///        public static string Delete = &quot;api/v1/&lt;!FieldName&gt;s&quot;;
        ///        public static string Save = &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Endpoints {
            get {
                return ResourceManager.GetString("Endpoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Threading;
        ///using System.Threading.Tasks;
        ///using BlazorHero.CleanArchitecture.Application.Extensions;
        ///using BlazorHero.CleanArchitecture.Application.Interfaces.Repositories;
        ///using BlazorHero.CleanArchitecture.Application.Interfaces.Services;
        ///using BlazorHero.CleanArchitecture.Application.Specifications.Catalog;
        ///using BlazorHero.CleanArchitecture.Domain.Entities.Catalog;
        ///using BlazorHero.CleanArchitecture.Shared.Wrapper;
        ///using MediatR;
        ///usi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Export {
            get {
                return ResourceManager.GetString("Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using BlazorHero.CleanArchitecture.Application.Specifications.Base;
        ///using BlazorHero.CleanArchitecture.Domain.Entities.Catalog;
        ///
        ///namespace BlazorHero.CleanArchitecture.Application.Specifications.Catalog
        ///{
        ///    public class &lt;FieldName&gt;FilterSpecification : HeroSpecification&lt;&lt;FieldName&gt;&gt;
        ///    {
        ///        public &lt;FieldName&gt;FilterSpecification(string searchString)
        ///        {
        ///            if (!string.IsNullOrEmpty(searchString))
        ///            {
        ///                Criteria = p =&gt; p.Name.Contains(searchString) ||  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FilterSpecification {
            get {
                return ResourceManager.GetString("FilterSpecification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using AutoMapper;
        ///using BlazorHero.CleanArchitecture.Application.Interfaces.Repositories;
        ///using BlazorHero.CleanArchitecture.Domain.Entities.Catalog;
        ///using BlazorHero.CleanArchitecture.Shared.Wrapper;
        ///using MediatR;
        ///using System.Threading;
        ///using System.Threading.Tasks;
        ///
        ///namespace BlazorHero.CleanArchitecture.Application.Features.&lt;FieldName&gt;s.Queries.GetById
        ///{
        ///    public class Get&lt;FieldName&gt;ByIdQuery : IRequest&lt;Result&lt;Get&lt;FieldName&gt;ByIdResponse&gt;&gt;
        ///    {
        ///        public int Id { get; set; }
        ///    }
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Get {
            get {
                return ResourceManager.GetString("Get", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using AutoMapper;
        ///using BlazorHero.CleanArchitecture.Application.Interfaces.Repositories;
        ///using BlazorHero.CleanArchitecture.Domain.Entities.Catalog;
        ///using BlazorHero.CleanArchitecture.Shared.Constants.Application;
        ///using BlazorHero.CleanArchitecture.Shared.Wrapper;
        ///using LazyCache;
        ///using MediatR;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Threading;
        ///using System.Threading.Tasks;
        ///
        ///namespace BlazorHero.CleanArchitecture.Application.Features.&lt;FieldName&gt;s.Queries.GetAll
        ///{
        ///    pub [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetAll {
            get {
                return ResourceManager.GetString("GetAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace BlazorHero.CleanArchitecture.Application.Features.&lt;FieldName&gt;s.Queries.GetAll
        ///{
        ///    public class GetAll&lt;FieldName&gt;sResponse
        ///    {
        ///        public int Id { get; set; }
        ///        public string Name { get; set; }
        ///        public string Description { get; set; }
        ///        //TODO add other fields
        ///    }
        ///}.
        /// </summary>
        internal static string GetAllResponse {
            get {
                return ResourceManager.GetString("GetAllResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace BlazorHero.CleanArchitecture.Application.Features.&lt;FieldName&gt;s.Queries.GetById
        ///{
        ///    public class Get&lt;FieldName&gt;ByIdResponse
        ///    {
        ///        public int Id { get; set; }
        ///        public string Name { get; set; }
        ///        public string Description { get; set; }
        ///        //TODO other Fields
        ///    }
        ///}.
        /// </summary>
        internal static string GetResponse {
            get {
                return ResourceManager.GetString("GetResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace BlazorHero.CleanArchitecture.Application.Interfaces.Repositories
        ///{
        ///    public interface I&lt;FieldName&gt;Repository
        ///    {
        ///    }
        ///}.
        /// </summary>
        internal static string I {
            get {
                return ResourceManager.GetString("I", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using BlazorHero.CleanArchitecture.Application.Features.&lt;FieldName&gt;s.Queries.GetAll;
        ///using BlazorHero.CleanArchitecture.Shared.Wrapper;
        ///using System.Collections.Generic;
        ///using System.Threading.Tasks;
        ///using BlazorHero.CleanArchitecture.Application.Features.&lt;FieldName&gt;s.Commands.AddEdit;
        ///
        ///namespace BlazorHero.CleanArchitecture.Client.Infrastructure.Managers.Catalog.&lt;FieldName&gt;
        ///{
        ///    public interface I&lt;FieldName&gt;Manager : IManager
        ///    {
        ///        Task&lt;IResult&lt;List&lt;GetAll&lt;FieldName&gt;sResponse&gt;&gt;&gt; GetAllAs [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string IManager {
            get {
                return ResourceManager.GetString("IManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using BlazorHero.CleanArchitecture.Application.Features.&lt;FieldName&gt;s.Queries.GetAll;
        ///using BlazorHero.CleanArchitecture.Client.Infrastructure.Extensions;
        ///using BlazorHero.CleanArchitecture.Shared.Wrapper;
        ///using System.Collections.Generic;
        ///using System.Net.Http;
        ///using System.Net.Http.Json;
        ///using System.Threading.Tasks;
        ///using BlazorHero.CleanArchitecture.Application.Features.&lt;FieldName&gt;s.Commands.AddEdit;
        ///
        ///namespace BlazorHero.CleanArchitecture.Client.Infrastructure.Managers.Catalog.&lt;FieldName&gt;
        ///{
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Manager {
            get {
                return ResourceManager.GetString("Manager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public static class &lt;FieldName&gt;s
        ///        {
        ///            public const string View = &quot;Permissions.&lt;FieldName&gt;s.View&quot;;
        ///            public const string Create = &quot;Permissions.&lt;FieldName&gt;s.Create&quot;;
        ///            public const string Edit = &quot;Permissions.&lt;FieldName&gt;s.Edit&quot;;
        ///            public const string Delete = &quot;Permissions.&lt;FieldName&gt;s.Delete&quot;;
        ///            public const string Export = &quot;Permissions.&lt;FieldName&gt;s.Export&quot;;
        ///            public const string Search = &quot;Permissions.&lt;FieldName&gt;s.Search&quot;;
        ///        }
        ///.
        /// </summary>
        internal static string Permission {
            get {
                return ResourceManager.GetString("Permission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using AutoMapper;
        ///using BlazorHero.CleanArchitecture.Application.Features.&lt;FieldName&gt;s.Commands.AddEdit;
        ///using BlazorHero.CleanArchitecture.Application.Features.&lt;FieldName&gt;s.Queries.GetAll;
        ///using BlazorHero.CleanArchitecture.Application.Features.&lt;FieldName&gt;s.Queries.GetById;
        ///using BlazorHero.CleanArchitecture.Domain.Entities.Catalog;
        ///
        ///namespace BlazorHero.CleanArchitecture.Application.Mappings
        ///{
        ///    public class &lt;FieldName&gt;Profile : Profile
        ///    {
        ///        public &lt;FieldName&gt;Profile()
        ///        {
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Profile {
            get {
                return ResourceManager.GetString("Profile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @page &quot;/catalog/&lt;!FieldName&gt;s&quot;
        ///@attribute [Authorize(Policy = Permissions.&lt;FieldName&gt;s.View)]
        ///@inject Microsoft.Extensions.Localization.IStringLocalizer&lt;&lt;FieldName&gt;s&gt; _localizer
        ///@using BlazorHero.CleanArchitecture.Application.Features.&lt;FieldName&gt;s.Queries.GetAll
        ///
        ///&lt;style&gt;
        ///    .mud-table-container {
        ///        overflow: auto;
        ///    }
        ///&lt;/style&gt;
        ///
        ///&lt;HeroTitle Title=&quot;@_localizer[&quot;&lt;FieldName&gt;s&quot;]&quot; Description=&quot;@_localizer[&quot;Manage &lt;FieldName&gt;s.&quot;]&quot; /&gt;
        ///@if (!_loaded)
        ///{
        ///    &lt;MudProgressCircular Color=&quot;Color.Prim [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string razor {
            get {
                return ResourceManager.GetString("razor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using BlazorHero.CleanArchitecture.Application.Features.&lt;FieldName&gt;s.Queries.GetAll;
        ///using BlazorHero.CleanArchitecture.Client.Extensions;
        ///using BlazorHero.CleanArchitecture.Shared.Constants.Application;
        ///using Microsoft.AspNetCore.Components;
        ///using Microsoft.AspNetCore.SignalR.Client;
        ///using MudBlazor;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Security.Claims;
        ///using System.Threading.Tasks;
        ///using BlazorHero.CleanArchitecture.Application.Features.&lt;FieldName&gt;s.Co [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string razor_cs {
            get {
                return ResourceManager.GetString("razor.cs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using BlazorHero.CleanArchitecture.Application.Interfaces.Repositories;
        ///using BlazorHero.CleanArchitecture.Domain.Entities.Catalog;
        ///
        ///namespace BlazorHero.CleanArchitecture.Infrastructure.Repositories
        ///{
        ///    public class &lt;FieldName&gt;Repository : I&lt;FieldName&gt;Repository
        ///    {
        ///        private readonly IRepositoryAsync&lt;&lt;FieldName&gt;, int&gt; _repository;
        ///
        ///        public &lt;FieldName&gt;Repository(IRepositoryAsync&lt;&lt;FieldName&gt;, int&gt; repository)
        ///        {
        ///            _repository = repository;
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string Repository {
            get {
                return ResourceManager.GetString("Repository", resourceCulture);
            }
        }
    }
}
